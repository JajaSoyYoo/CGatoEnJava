package act2;
import java_cup.runtime.*;

parser code
{:
    public void syntax_error(Symbol s) {
        report_error("Error de sintaxis en linea: " + (s.left) + " , columna: " + (s.right + 1) + ", simbolo: " + s.value, null);
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception {
        report_fatal_error("", null);
    }
:}

// Reservadas terminales
terminal PACKAGE, USING, NAMESPACE, CLASS;
terminal PUBLIC, PRIVATE, PROTECTED, INTERNAL;
terminal VOID, INT, STRING, BOOL, FLOAT, CHAR, TRUE, FALSE;
terminal IF, ELSE, FOR, WHILE, RETURN;
terminal STATIC, NEW;

// Simbolos terminales
terminal PUNTO_COMA, PUNTO, COMA, PARENTESIS_IZQUIERDO, PARENTESIS_DERECHO;
terminal LLAVE_IZQUIERDA, LLAVE_DERECHA, CORCHETE_IZQUIERDO, CORCHETE_DERECHO;
terminal SUMA, RESTA, MULTIPLICACION, DIVISION;
terminal ASIGNACION, IGUALDAD, DESIGUALDAD;
terminal MENOR_QUE, MAYOR_QUE, MENOR_O_IGUAL_QUE, MAYOR_O_IGUAL_QUE;
terminal Y_LOGICO, O_LOGICO, INCREMENTO, NEGACION;

// Otros terminales
terminal IDENTIFICADOR, NDECIMAL, NENTERO, CADENA, CARACTER;

// No terminales
non terminal programa, declaraciones, declaracion, dec_namespace, dec_using, dec_clase, expresiones, dec_variable, tipo_bool, tipo_int, tipo_string, tipo_char, tipo_float,
    expresion, condicion, terminos, factor, estructura_control, sentencia_if, sentencia_while, sentencia_for, boleano, termino, expresion_incremento;

// Reglas gramaticales
start with programa;

programa ::= declaraciones;

declaraciones ::= declaracion
    | declaracion declaraciones;

declaracion ::= dec_using
    | dec_namespace
    | dec_clase;

// Declaraciones usando y espacio de nombres
dec_using ::= USING IDENTIFICADOR PUNTO_COMA
    {:
        System.out.println("---Declaracion de uso---");
    :}
    | USING IDENTIFICADOR error
    {:
        System.err.println("Error: Se esperaba punto y coma");
    :};

dec_namespace ::= NAMESPACE IDENTIFICADOR LLAVE_IZQUIERDA declaraciones LLAVE_DERECHA
    {:
        System.out.println("---Declaracion de espacio de nombre---");
    :}
    | NAMESPACE IDENTIFICADOR error declaraciones LLAVE_DERECHA
    {:
        System.err.println("Error: Se esperaba {");
    :}
    | NAMESPACE IDENTIFICADOR LLAVE_IZQUIERDA declaraciones error
    {:
        System.err.println("Error: Se esperaba }");
    :};

dec_clase ::= CLASS IDENTIFICADOR LLAVE_IZQUIERDA expresiones LLAVE_DERECHA
    {:
        System.out.println("---Declaracion de clase---");
    :}
    | CLASS IDENTIFICADOR error expresiones LLAVE_DERECHA
    {:
        System.err.println("Error: Se esperaba {");
    :}
    | CLASS IDENTIFICADOR LLAVE_IZQUIERDA expresiones error
    {:
        System.err.println("Error: Se esperaba }");
    :};

// Reglas para expresiones
expresiones ::= dec_variable expresiones
    | estructura_control expresiones
    | expresion PUNTO_COMA expresiones
    | expresion PUNTO_COMA
    | dec_variable
    | estructura_control;

// Expresiones
expresion ::= termino
    | expresion SUMA termino
    | expresion RESTA termino;

// Terminos
termino ::= factor
    | termino MULTIPLICACION factor
    | termino DIVISION factor;

// Factor
factor ::= IDENTIFICADOR
    | NENTERO
    | NDECIMAL
    | PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO;

// Estructuras de control
estructura_control ::= sentencia_if
    | sentencia_while
    | sentencia_for;

// Sentencias de control
sentencia_if ::= IF PARENTESIS_IZQUIERDO condicion PARENTESIS_DERECHO LLAVE_IZQUIERDA expresiones LLAVE_DERECHA
    {:
        System.out.println("---Sentencia if---");
    :}
    | IF PARENTESIS_IZQUIERDO condicion PARENTESIS_DERECHO LLAVE_IZQUIERDA expresiones LLAVE_DERECHA ELSE LLAVE_IZQUIERDA expresiones LLAVE_DERECHA
    {:
        System.out.println("---Sentencia if con else---");
    :};

sentencia_while ::= WHILE PARENTESIS_IZQUIERDO condicion PARENTESIS_DERECHO LLAVE_IZQUIERDA expresiones LLAVE_DERECHA
    {:
        System.out.println("---Sentencia while---");
    :};

// Ajuste de la regla for
sentencia_for ::= FOR PARENTESIS_IZQUIERDO dec_variable PUNTO_COMA condicion PUNTO_COMA expresion_incremento PARENTESIS_DERECHO LLAVE_IZQUIERDA expresiones LLAVE_DERECHA
    {:
        System.out.println("---Sentencia for---");
    :};

// Nueva regla para expresion de incremento
expresion_incremento ::= IDENTIFICADOR INCREMENTO
    | IDENTIFICADOR ASIGNACION IDENTIFICADOR SUMA NENTERO
    | /* vac√≠o */;

// Reglas para condiciones
condicion ::= expresion IGUALDAD expresion
    | expresion DESIGUALDAD expresion
    | expresion MENOR_QUE expresion
    | expresion MAYOR_QUE expresion
    | expresion MENOR_O_IGUAL_QUE expresion
    | expresion MAYOR_O_IGUAL_QUE expresion
    | TRUE
    | FALSE
    | error
    {:
        System.err.println("Error en la condicion.");
    :};

// Declaraciones de variables
dec_variable ::= tipo_bool
    | tipo_int
    | tipo_string
    | tipo_char
    | tipo_float;

// Tipos de datos
tipo_bool ::= BOOL IDENTIFICADOR ASIGNACION boleano PUNTO_COMA
    {:
        System.out.println("--Variable booleana--");
    :}
    | BOOL IDENTIFICADOR ASIGNACION error
    {:
        System.err.println("Error: falta punto y coma al final de la declaracion de variable booleana.");
    :};

boleano ::= TRUE
    | FALSE;

tipo_int ::= INT IDENTIFICADOR ASIGNACION NENTERO PUNTO_COMA
    {:
        System.out.println("--Variable entera--");
    :}
    | INT IDENTIFICADOR ASIGNACION error
    {:
        System.err.println("Error: falta punto y coma al final de la declaracion de variable entera.");
    :};

tipo_float ::= FLOAT IDENTIFICADOR ASIGNACION NDECIMAL PUNTO_COMA
    {:
        System.out.println("--Variable flotante--");
    :}
    | FLOAT IDENTIFICADOR ASIGNACION error
    {:
        System.err.println("Error: falta punto y coma al final de la declaracion de variable flotante.");
    :};

tipo_string ::= STRING IDENTIFICADOR ASIGNACION CADENA PUNTO_COMA
    {:
        System.out.println("--Variable cadena--");
    :}
    | STRING IDENTIFICADOR ASIGNACION error
    {:
        System.err.println("Error: falta punto y coma al final de la declaracion de variable cadena.");
    :};

tipo_char ::= CHAR IDENTIFICADOR ASIGNACION CARACTER PUNTO_COMA
    {:
        System.out.println("--Variable caracter--");
    :}
    | CHAR IDENTIFICADOR ASIGNACION error
    {:
        System.err.println("Error: falta punto y coma al final de la declaracion de variable caracter.");
    :};